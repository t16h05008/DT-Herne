version: '3.8'
services:
  dt-herne-mitte-mongodb:
    container_name: dt-herne-mitte-mongodb
    image: mongo:4.4.5
    networks:
      dtHerneNetwork:
        aliases:
          - dt-herne-mitte-database
        ipv4_address: 172.20.0.26
    restart: "always"
  
  dt-herne-mitte-mongo-seed:
    container_name: dt-herne-mitte-mongo-seed
    image: mongo:4.4.5
    # Wait for mongo to initialize, then import data
    # Use the import file for this stack
    entrypoint: [ "bash", "-c", "sleep 20 && sh '/tmp/import.herne-mitte.sh'"]
    networks:
      dtHerneNetwork:
        aliases:
          - dt-herne-mitte-database-seed
        ipv4_address: 172.20.0.25
    depends_on:
      - dt-herne-mitte-mongodb
    volumes:
      # Put json files in this Volume before launching the stack
      - dt-herne-mongodb:/tmp
    restart: "no"
  
  dt-herne-mitte-backend:
    container_name: dt-herne-mitte-backend
    hostname: dt-herne-mitte-backend
    #build: 
    #  context: "DT-Herne-Backend"
    image: t16h05008/dt-herne-mitte-backend:latest
    ports: 
      - 8101:8000
    environment:
      MONGODB_URI: ${MONGODB_URI}
      DB_NAME: ${DB_NAME}
    networks:
      dtHerneNetwork:
        aliases:
          - dt-herne-mitte-backend
        ipv4_address: 172.20.0.24
    restart: "always"
    volumes:
      - dt-herne-backend:/app/data
    depends_on:
      - dt-herne-mitte-mongodb
  
  dt-herne-mitte-frontend:
    container_name: dt-herne-mitte-frontend
    hostname: dt-herne-mitte-frontend
    restart: "always"
    #build: 
    #  context: "DT-Herne-Frontend"
    image: t16h05008/dt-herne-mitte-frontend:latest
    networks:
      dtHerneNetwork:
        aliases:
          - dt-herne-mitte-frontend
        ipv4_address: 172.20.0.23
    ports: 
      - 8100:80

networks:
  dtHerneNetwork:
    external: true # Network exists even when stack is not running

volumes:
  dt-herne-backend:
    external: true
  dt-herne-mongodb:
    external: true